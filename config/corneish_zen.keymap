/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define NUMBER 1
#define SYMBOL 2
#define FUNCTION 3

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        mht: mod_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
        hl: homerow_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // LAYER 0
        default_layer {
            display-name = "default";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | ALT | GUI | SPC |   | ENT | NUM  | ALT |

            bindings = <
            &kp TAB         &kp Q  &kp W  &kp E     &kp R         &kp T               &kp Y               &kp U         &kp I      &kp O    &kp P     &kp BSPC
            &mht LCTRL ESC  &kp A  &kp S  &kp D     &hl NUMBER F  &kp G               &kp H               &hl NUMBER J  &kp K      &kp L    &kp SEMI  &kp SQT
            &kp LSHIFT      &kp Z  &kp X  &kp C     &kp V         &kp B               &kp N               &kp M         &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                                          &kp LALT  &kp LGUI      &lt FUNCTION SPACE  &lt FUNCTION ENTER  &mo NUMBER    &kp RALT
            >;
        };

        // LAYER 1
        number_layer {
            display-name = "number";

            // -----------------------------------------------------------------------------------------
            // |  `   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | PIPE |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
            &kp TILDE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6    &kp N7    &kp N8   &kp N9     &kp N0  &kp PIPE
            &trans     &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans  &trans 
            &trans     &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans   &trans     &trans  &trans
                                       &trans  &trans  &trans  &trans    &trans    &trans
            >;
        };

        // LAYER 2
        symbol_layer {
            display-name = "symbol";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
            &trans  &kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
            &trans  &none         &none         &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
            &trans  &out OUT_USB  &out OUT_BLE  &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                                &trans    &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        // LAYER 3
        function_layer {
            display-name = "function";
            bindings = <
            &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5      &kp F6         &kp F7       &kp F8  &kp F9  &kp F10          &kp F11
            &trans  &trans  &trans  &trans  &sys_reset  &bootloader    &bootloader  &trans  &trans  &trans  &kp PRINTSCREEN  &kp F12
            &trans  &trans  &trans  &trans  &trans      &trans         &trans       &trans  &trans  &trans  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                    &trans  &trans      &trans         &trans       &trans  &trans
            >;
        };
    };
};
